#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Copyright 2013 Thomas Bechtold <thomasbechtold@jpberlin.de>
# Copyright 2013 Deutsche Telekom AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import print_function

import argparse
import sys
import os
import StringIO
import requests
import socket

try:
    from aptexport import AptCacheExport
except ImportError:
    #try to install from local directory
    sys.path.append(
        os.path.join(os.path.dirname(os.path.abspath(__file__)), "../"))
    from aptexport import AptCacheExport


def process_args():
    """process arguments"""
    parser = argparse.ArgumentParser(prog='repository-software')
    parser.add_argument('-o', '--output-file', help='output file')
    parser.add_argument('-s', '--server', nargs=1, metavar=('URI'),
                        help='server to send data')
    parser.add_argument('-i', '--only-installed', action='store_true',
                        help='output only installed packages" \
                        "(default: %(default)s)')
    parser.add_argument('-p', '--pretty', action='store_true',
                        help='pretty print for json output" \
                        "(default: %(default)s)')
    return vars(parser.parse_args())


if __name__ == '__main__':
    """main entry point"""
    args = process_args()
    ace = AptCacheExport()
    if args['output_file']:
        #write to file
        with open(args['output_file'], "w") as f:
            ace.as_json(f, args['only_installed'], args['pretty'])
    elif args['server']:
        #send data via http post request to server
        uri = args['server'][0]
        #data
        s = StringIO.StringIO()
        ace.as_json(s, args['only_installed'], args['pretty'])
        s.seek(0)
        payload = {'fqdn': socket.getfqdn(), 'data': s.getvalue()}
        headers = {'content-type': 'application/json'}
        #send and check return status code
        r = requests.post(uri, data=payload, headers=headers)
        if r.status_code != requests.codes.ok:
            print(r.text)
            sys.exit(-1)
    else:
        #write to console
        ace.as_json(sys.stdout, args['only_installed'], args['pretty'])

    sys.exit(0)
