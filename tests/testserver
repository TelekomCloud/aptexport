#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2013 Deutsche Telekom AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import print_function

import BaseHTTPServer
import socket
import json


class PostRequestHandler(BaseHTTPServer.BaseHTTPRequestHandler):
    def do_POST(self):
        print("path   : '{0}'".format(self.path))
        print("version: '{0}'".format(self.request_version))
        print("cmd    : '{0}'".format(self.command))
        content_length = int(self.headers['Content-Length'])
        data_raw = self.rfile.read(content_length)
        print("data received ({0}, {0})".format(content_length, len(data_raw)))
        #parse the received json data
        json.loads(data_raw)
        print("json decoded")
        self.send_response(200)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()


class TimeoutHTTPServer(BaseHTTPServer.HTTPServer):
    def server_bind(self):
        BaseHTTPServer.HTTPServer.server_bind(self)
        #use hardcoded 20 s as timeout
        self.socket.settimeout(20)

    def get_request(self):
        try:
            sock, addr = self.socket.accept()
            sock.settimeout(None)
            return (sock, addr)
        except socket.timeout:
            pass


if __name__ == "__main__":
    httpd = TimeoutHTTPServer(("127.0.0.1", 8000), PostRequestHandler)
    #start handling one request (or get a timeout)
    httpd.handle_request()
